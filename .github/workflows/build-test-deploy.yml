name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Altere conforme necessário para a sua branch principal
  workflow_dispatch:  # Adiciona a capacidade de execução manual

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: felipeacezar/devopsgram:latest
          build-args: NO_CACHE=true

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-flask

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Run tests
        run: pytest tests/test_app.py

  deploy:
    runs-on: ubuntu-latest
    container:
      image: quay.io/openshift/origin-cli:4.10
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to OpenShift
        env:
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
          OPENSHIFT_SERVER: ${{ vars.OPENSHIFT_SERVER }}
        run: |
          oc login --token=${OPENSHIFT_TOKEN} --server=${OPENSHIFT_SERVER} --insecure-skip-tls-verify=true

      - name: Switch to OpenShift project
        run: oc project ${{ vars.OPENSHIFT_PROJECT }}

      - name: Apply manifests
        run: |
          oc delete -f ocp/ --ignore-not-found=true || true
          oc apply -f ocp/ || { echo "Falha ao aplicar manifests"; exit 1; }